{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Button, Form, InputGroup, FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditMovement(props) {\n  _s();\n\n  const [show, setShow] = React.useState(false);\n  console.log(props.movement_id);\n  const [amount, setAmount] = React.useState(props.amount);\n  const [concept, setConcept] = React.useState(props.concept);\n  const [typeM, setTypeM] = React.useState(props.typem);\n  const [dateM, setDateM] = React.useState(props.datem);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const onSubmitForm = async e => {\n    // Handle the form submitted\n    // Prevent from refresh\n    e.preventDefault();\n\n    try {\n      const body = {\n        amount,\n        concept,\n        typeM,\n        dateM\n      };\n      const response = await fetch(`http://localhost:5000/movements/${props.movement_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }); //  Once the response has been sent, itś going to refresh and show the changes\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit movement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmitForm,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              value: amount,\n              onChange: e => setAmount(e.target.value),\n              \"aria-label\": \"Amount (to the nearest dollar)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              value: concept,\n              \"aria-describedby\": \"basic-addon1\",\n              onChange: e => setConcept(e.target.value),\n              \"aria-describedby\": \"basic-addon1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type of Operation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            value: typeM,\n            onChange: e => setTypeM(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Income\",\n              name: \"group1\",\n              type: \"radio\",\n              id: `inline-radio-1`,\n              value: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Outcome\",\n              name: \"group1\",\n              type: \"radio\",\n              id: `inline-radio-2`,\n              value: \"O\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, `inline-radio`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"mb-3\",\n            type: \"date\",\n            value: dateM,\n            onChange: e => setDateM(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mb-3\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} // import \"../style.css\"\n// const EditMovement = props => {\n//     const [amount, setAmount] = React.useState(props.movement.amount)\n//     const [concept, setConcept] = React.useState(props.movement.concept)\n//     const [typeM, setTypeM] = React.useState(props.movement.typeM)\n//     const [dateM, setDateM] = React.useState(props.movement.dateM)\n//     const onSubmitForm = async e => {\n//         // Handle the form submitted\n//         // Prevent from refresh\n//         e.preventDefault()\n//         try {\n//           const body = { amount, concept, typeM, dateM }\n//           const response = await fetch(`http://localhost:5000/movements/${props.movement.movement_id}`, {\n//               method: \"PUT\",\n//               headers: { \"Content-Type\": \"application/json\" },\n//               body: JSON.stringify(body)\n//           })\n//         //  Once the response has been sent, itś going to refresh and show the changes\n//           window.location = \"/\" \n//         } catch (err) {\n//             console.error(err.message)\n//         }\n//     }\n//     return (\n//         <div className=\"popup-box\">\n//             <div className=\"box\">\n//                 <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n//                 {/* {props.content} */}\n//                 <form onSubmit={onSubmitForm}>\n//                     <label>\n//                         Amount:\n//                         <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Concept:\n//                         <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Type of movement:\n//                         <select value={typeM} disabled >\n//                             <option value=\"I\">Income</option>\n//                             <option value=\"O\">Outcome</option>\n//                         </select>\n//                     </label>\n//                     <label>\n//                         Date:\n//                         <input type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n_s(EditMovement, \"sk/13fl3IZU0D2e3F3NSkS5NE+g=\");\n\n_c = EditMovement;\nexport default EditMovement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovement\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js"],"names":["React","Modal","Button","Form","InputGroup","FormControl","EditMovement","props","show","setShow","useState","console","log","movement_id","amount","setAmount","concept","setConcept","typeM","setTypeM","typem","dateM","setDateM","datem","handleClose","handleShow","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","window","location","err","error","message","target","value"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Modal, Button, Form, InputGroup, FormControl } from \"react-bootstrap\"\n\nfunction EditMovement(props) {\n    const [show, setShow] = React.useState(false)\n    console.log(props.movement_id)\n    const [amount, setAmount] = React.useState(props.amount)\n    const [concept, setConcept] = React.useState(props.concept)\n    const [typeM, setTypeM] = React.useState(props.typem)\n    const [dateM, setDateM] = React.useState(props.datem)\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const onSubmitForm = async e => {\n        // Handle the form submitted\n\n        // Prevent from refresh\n        e.preventDefault()\n        try {\n            const body = { amount, concept, typeM, dateM }\n            const response = await fetch(`http://localhost:5000/movements/${props.movement_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            })\n            //  Once the response has been sent, itś going to refresh and show the changes\n            window.location = \"/\"\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Edit\n        </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit movement</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={onSubmitForm}>\n                        <Form.Label>Amount</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <InputGroup.Text>$</InputGroup.Text>\n                            <FormControl\n                                value={amount}\n                                onChange={e => setAmount(e.target.value)}\n                                aria-label=\"Amount (to the nearest dollar)\"\n                            />\n                        </InputGroup>\n\n                        <Form.Label>Concept</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl\n                                value={concept}\n                                aria-describedby=\"basic-addon1\"\n                                onChange={e => setConcept(e.target.value)}\n                                aria-describedby=\"basic-addon1\"\n                            />\n                        </InputGroup>\n\n                        <Form.Label>Type of Operation</Form.Label>\n                        <div key={`inline-radio`} className=\"mb-3\" value={typeM} onChange={e => setTypeM(e.target.value)}>\n                            <Form.Check\n                                inline\n                                label=\"Income\"\n                                name=\"group1\"\n                                type=\"radio\"\n                                id={`inline-radio-1`}\n                                value=\"I\"\n                            />\n                            <Form.Check\n                                inline\n                                label=\"Outcome\"\n                                name=\"group1\"\n                                type=\"radio\"\n                                id={`inline-radio-2`}\n                                value=\"O\"\n                            />\n                        </div>\n\n                        <Form.Label>Date</Form.Label>\n                        <FormControl className=\"mb-3\" type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)}></FormControl>\n                        <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n            </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\n\n\n\n// import \"../style.css\"\n\n// const EditMovement = props => {\n//     const [amount, setAmount] = React.useState(props.movement.amount)\n//     const [concept, setConcept] = React.useState(props.movement.concept)\n//     const [typeM, setTypeM] = React.useState(props.movement.typeM)\n//     const [dateM, setDateM] = React.useState(props.movement.dateM)\n\n//     const onSubmitForm = async e => {\n//         // Handle the form submitted\n\n//         // Prevent from refresh\n//         e.preventDefault()\n//         try {\n//           const body = { amount, concept, typeM, dateM }\n//           const response = await fetch(`http://localhost:5000/movements/${props.movement.movement_id}`, {\n//               method: \"PUT\",\n//               headers: { \"Content-Type\": \"application/json\" },\n//               body: JSON.stringify(body)\n//           })\n//         //  Once the response has been sent, itś going to refresh and show the changes\n//           window.location = \"/\" \n//         } catch (err) {\n//             console.error(err.message)\n//         }\n//     }\n\n//     return (\n//         <div className=\"popup-box\">\n//             <div className=\"box\">\n//                 <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n//                 {/* {props.content} */}\n//                 <form onSubmit={onSubmitForm}>\n//                     <label>\n//                         Amount:\n//                         <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Concept:\n//                         <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Type of movement:\n//                         <select value={typeM} disabled >\n//                             <option value=\"I\">Income</option>\n//                             <option value=\"O\">Outcome</option>\n//                         </select>\n//                     </label>\n//                     <label>\n//                         Date:\n//                         <input type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n\nexport default EditMovement"]},"metadata":{},"sourceType":"module"}