{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/InputMovement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputMovement = () => {\n  _s();\n\n  const [amount, setAmount] = React.useState(0);\n  const [concept, setConcept] = React.useState(\"\");\n  const [typeM, setTypeM] = React.useState(\"I\");\n  const [dateM, setDateM] = React.useState(\"\");\n\n  const onSubmitForm = async e => {\n    // Handle the form submitted\n    // Prevent from refresh\n    e.preventDefault();\n\n    try {\n      const body = {\n        amount,\n        concept,\n        typeM,\n        dateM\n      };\n      const response = await fetch(\"http://localhost:5000/movements\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }); //  Once the response has been sent, itś going to refresh and show the changes\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Input Movement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          \"aria-label\": \"Amount (to the nearest dollar)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Concept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          value: concept,\n          onChange: e => setConcept(e.target.value),\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Type of Operation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        value: typeM,\n        onChange: e => setTypeM(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"Income\",\n          name: \"group1\",\n          type: \"radio\",\n          id: `inline-radio-1`,\n          value: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"Outcome\",\n          name: \"group1\",\n          type: \"radio\",\n          id: `inline-radio-2`,\n          value: \"O\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, `inline-radio`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"mb-3\",\n        type: \"date\",\n        value: dateM,\n        onChange: e => setDateM(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-3\",\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputMovement, \"uFj0UvphgpTTqCO2RkcORvUF74Q=\");\n\n_c = InputMovement;\nexport default InputMovement;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMovement\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/InputMovement.js"],"names":["React","Form","Button","InputGroup","FormControl","InputMovement","amount","setAmount","useState","concept","setConcept","typeM","setTypeM","dateM","setDateM","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","window","location","err","console","error","message","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nconst InputMovement = () => {\n  const [amount, setAmount] = React.useState(0);\n  const [concept, setConcept] = React.useState(\"\");\n  const [typeM, setTypeM] = React.useState(\"I\");\n  const [dateM, setDateM] = React.useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    // Handle the form submitted\n\n    // Prevent from refresh\n    e.preventDefault();\n    try {\n      const body = { amount, concept, typeM, dateM };\n      const response = await fetch(\"http://localhost:5000/movements\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      //  Once the response has been sent, itś going to refresh and show the changes\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={onSubmitForm}>\n        <h1>Input Movement</h1>\n\n        <Form.Label>Amount</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text>$</InputGroup.Text>\n          <FormControl\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            aria-label=\"Amount (to the nearest dollar)\"\n          />\n        </InputGroup>\n\n        <Form.Label>Concept</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            value={concept}\n            onChange={(e) => setConcept(e.target.value)}\n            aria-describedby=\"basic-addon1\"\n          />\n        </InputGroup>\n\n        <Form.Label>Type of Operation</Form.Label>\n        <div\n          key={`inline-radio`}\n          className=\"mb-3\"\n          value={typeM}\n          onChange={(e) => setTypeM(e.target.value)}\n        >\n          <Form.Check\n            inline\n            label=\"Income\"\n            name=\"group1\"\n            type=\"radio\"\n            id={`inline-radio-1`}\n            value=\"I\"\n          />\n          <Form.Check\n            inline\n            label=\"Outcome\"\n            name=\"group1\"\n            type=\"radio\"\n            id={`inline-radio-2`}\n            value=\"O\"\n          />\n        </div>\n\n        <Form.Label>Date</Form.Label>\n        <FormControl\n          className=\"mb-3\"\n          type=\"date\"\n          value={dateM}\n          onChange={(e) => setDateM(e.target.value)}\n        ></FormControl>\n\n        <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default InputMovement;\n"]},"metadata":{},"sourceType":"module"}