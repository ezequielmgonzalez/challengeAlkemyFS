{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/ListMovements.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListMovements = () => {\n  _s();\n\n  const [list, setList] = React.useState([]);\n\n  const getMovements = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/movements\");\n      const jsonData = await response.json();\n      setList(jsonData.slice(0, 10));\n      console.log(jsonData);\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n\n  const deleteMovement = async id => {\n    try {\n      const deleteMovement = await fetch(`http://localhost:5000/movements/${id}`, {\n        method: \"DELETE\"\n      });\n      setList(list.filter(list => list.movement_id !== id));\n    } catch (e) {\n      console.error(e.message);\n    }\n  }; // Makes a fetch request tou our REST api everytime this is component is rendered\n\n\n  React.useEffect(() => {\n    getMovements();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(list => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.concept\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.dateM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.typeM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteMovement(list.movement_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, list.movement_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListMovements, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = ListMovements;\nexport default ListMovements;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListMovements\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/ListMovements.js"],"names":["React","ListMovements","list","setList","useState","getMovements","response","fetch","jsonData","json","slice","console","log","e","error","message","deleteMovement","id","method","filter","movement_id","useEffect","map","amount","concept","dateM","typeM"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAN,MAAAA,OAAO,CAACK,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAiB,EAAjB,CAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,KALD,CAKE,OAAOK,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACG,KAAR,CAAcD,CAAC,CAACE,OAAhB;AACH;AACJ,GATD;;AAWA,QAAMC,cAAc,GAAG,MAAOC,EAAP,IAAc;AACjC,QAAI;AACA,YAAMD,cAAc,GAAG,MAAMT,KAAK,CAAE,mCAAkCU,EAAG,EAAvC,EAA0C;AACxEC,QAAAA,MAAM,EAAE;AADgE,OAA1C,CAAlC;AAGAf,MAAAA,OAAO,CAACD,IAAI,CAACiB,MAAL,CAAYjB,IAAI,IAAIA,IAAI,CAACkB,WAAL,KAAqBH,EAAzC,CAAD,CAAP;AACH,KALD,CAKE,OAAOJ,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACG,KAAR,CAAcD,CAAC,CAACE,OAAhB;AACH;AACJ,GATD,CAdwB,CAyBxB;;;AACAf,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClBhB,IAAAA,YAAY;AACf,GAFD,EAEG,EAFH;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eACK,GADL,eAEI;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,kBAMCH,IAAI,CAACoB,GAAL,CAASpB,IAAI,iBACV;AAAA,kCACA;AAAA,sBAAKA,IAAI,CAACqB;AAAV;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAKrB,IAAI,CAACsB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA,sBAAKtB,IAAI,CAACuB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA,sBAAKvB,IAAI,CAACwB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eASA;AAAA,mCACI;AACC,cAAA,OAAO,EAAE,MAAMV,cAAc,CAACd,IAAI,CAACkB,WAAN,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATA;AAAA,WAASlB,IAAI,CAACkB,WAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AAND;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CAzED;;GAAMnB,a;;KAAAA,a;AA2EN,eAAeA,aAAf","sourcesContent":["import React from \"react\"\n\nconst ListMovements = () => {\n    const [list, setList] = React.useState([])\n\n    const getMovements = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/movements\")\n            const jsonData = await response.json()\n            setList(jsonData.slice(0,10))\n            console.log(jsonData)\n        } catch (e) {\n            console.error(e.message)\n        }\n    }\n\n    const deleteMovement = async (id) => {\n        try {\n            const deleteMovement = await fetch(`http://localhost:5000/movements/${id}`, {\n                method: \"DELETE\"\n            })\n            setList(list.filter(list => list.movement_id !== id))\n        } catch (e) {\n            console.error(e.message)\n        }\n    }\n\n    // Makes a fetch request tou our REST api everytime this is component is rendered\n    React.useEffect(() => {\n        getMovements()\n    }, [])\n\n    return (\n        <React.Fragment>\n            {\" \"}\n            <table>\n                <thead>\n                <tr>\n                    <th>Amount</th>\n                    <th>Concept</th>\n                    <th>Date</th>\n                    <th>Type</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                {/*<tr>\n                    <td>John</td>\n                    <td>Doe</td>\n                    <td>john@example.com</td>\n                </tr> */}\n                {list.map(list => (\n                    <tr key={list.movement_id}>\n                    <td>{list.amount}</td>\n                    <td>{list.concept}</td>\n                    <td>{list.dateM}</td>\n                    <td>{list.typeM}</td>\n                    <td>\n                        {/* <EditTodo todo={todo} /> */}\n                        Edit\n                    </td>\n                    <td>\n                        <button\n                         onClick={() => deleteMovement(list.movement_id)}\n                        >\n                        Delete\n                        </button>\n                    </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </React.Fragment>\n    )\n}\n\nexport default ListMovements"]},"metadata":{},"sourceType":"module"}