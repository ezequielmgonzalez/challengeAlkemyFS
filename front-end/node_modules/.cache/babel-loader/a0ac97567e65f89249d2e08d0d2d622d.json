{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js\";\nimport React from \"react\";\nimport { Modal, Button, Form, InputGroup, FormControl } from \"react-bootstrap\"; // function EditMovement({ list }) {\n//   const [show, setShow] = React.useState(false);\n//   console.log(list);\n//   const [amount, setAmount] = React.useState(list.amount);\n//   const [concept, setConcept] = React.useState(list.concept);\n//   const [typeM, setTypeM] = React.useState(list.typem);\n//   const [dateM, setDateM] = React.useState(list.datem.substring(0, 10));\n//   const handleClose = () => setShow(false);\n//   const handleShow = () => setShow(true);\n//   const onSubmitForm = async (e) => {\n//     // Handle the form submitted\n//     // Prevent from refresh\n//     e.preventDefault();\n//     try {\n//       const body = { amount, concept, typeM, dateM };\n//       const response = await fetch(\n//         `http://localhost:5000/movements/${list.movement_id}`,\n//         {\n//           method: \"PUT\",\n//           headers: { \"Content-Type\": \"application/json\" },\n//           body: JSON.stringify(body),\n//         }\n//       );\n//       //  Once the response has been sent, itś going to refresh and show the changes\n//       window.location = \"/\";\n//     } catch (err) {\n//       console.error(err.message);\n//     }\n//   };\n//   return (\n//     <>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Edit\n//       </Button>\n//       <Modal show={show} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Edit movement</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <Form onSubmit={onSubmitForm}>\n//             <Form.Label>Amount</Form.Label>\n//             <InputGroup className=\"mb-3\">\n//               <InputGroup.Text>$</InputGroup.Text>\n//               <FormControl\n//                 value={amount}\n//                 onChange={(e) => setAmount(e.target.value)}\n//                 aria-label=\"Amount (to the nearest dollar)\"\n//               />\n//             </InputGroup>\n//             <Form.Label>Concept</Form.Label>\n//             <InputGroup className=\"mb-3\">\n//               <FormControl\n//                 value={concept}\n//                 aria-describedby=\"basic-addon1\"\n//                 onChange={(e) => setConcept(e.target.value)}\n//                 aria-describedby=\"basic-addon1\"\n//               />\n//             </InputGroup>\n//             <Form.Label>Type of Operation</Form.Label>\n//             <div\n//               key={`inline-radio`}\n//               className=\"mb-3\"\n//               value={typeM}\n//               onChange={(e) => setTypeM(e.target.value)}\n//             >\n//               <Form.Check\n//                 inline\n//                 disabled\n//                 label=\"Income\"\n//                 name=\"group1\"\n//                 type=\"radio\"\n//                 id={`inline-radio-1`}\n//                 value=\"I\"\n//                 checked={typeM === \"I\" ? true : false}\n//               />\n//               <Form.Check\n//                 inline\n//                 disabled\n//                 label=\"Outcome\"\n//                 name=\"group1\"\n//                 type=\"radio\"\n//                 id={`inline-radio-2`}\n//                 value=\"O\"\n//                 checked={typeM === \"O\" ? true : false}\n//               />\n//             </div>\n//             <Form.Label>Date</Form.Label>\n//             <FormControl\n//               className=\"mb-3\"\n//               type=\"date\"\n//               value={dateM}\n//               onChange={(e) => setDateM(e.target.value)}\n//             ></FormControl>\n//             <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n//               Submit\n//             </Button>\n//           </Form>\n//         </Modal.Body>\n//       </Modal>\n//     </>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditMovement(_ref) {\n  let {\n    list\n  } = _ref;\n\n  const onSubmitForm = async e => {\n    // Handle the form submitted\n    // Prevent from refresh\n    e.preventDefault();\n\n    try {\n      const body = {\n        amount,\n        concept,\n        typeM,\n        dateM\n      };\n      const response = await fetch(`http://localhost:5000/movements/${list.movement_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }); //  Once the response has been sent, itś going to refresh and show the changes\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalInput, {\n      title: \"Edit movement\",\n      onSubmitForm: onSubmitForm,\n      disableMovementType: true,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EditMovement;\nexport default EditMovement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovement\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js"],"names":["React","Modal","Button","Form","InputGroup","FormControl","EditMovement","list","onSubmitForm","e","preventDefault","body","amount","concept","typeM","dateM","response","fetch","movement_id","method","headers","JSON","stringify","window","location","err","console","error","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,UAA9B,EAA0CC,WAA1C,QAA6D,igC;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;;AAC9B,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC;AAEA;AACAA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,IAAI,GAAG;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBC,QAAAA,KAAnB;AAA0BC,QAAAA;AAA1B,OAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,mCAAkCV,IAAI,CAACW,WAAY,EAD1B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGET,QAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAeX,IAAf;AAHR,OAF0B,CAA5B,CAFE,CAUF;;AACAY,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACD,KAZD,CAYE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GApBD;;AAsBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,YAAY,EAAEpB,YAFhB;AAGE,MAAA,mBAAmB,EAAE,IAHvB;AAIE,MAAA,IAAI,EAAED;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAjCQD,Y;AAmCT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { Modal, Button, Form, InputGroup, FormControl } from \"react-bootstrap\";\n\n// function EditMovement({ list }) {\n//   const [show, setShow] = React.useState(false);\n//   console.log(list);\n//   const [amount, setAmount] = React.useState(list.amount);\n//   const [concept, setConcept] = React.useState(list.concept);\n//   const [typeM, setTypeM] = React.useState(list.typem);\n//   const [dateM, setDateM] = React.useState(list.datem.substring(0, 10));\n\n//   const handleClose = () => setShow(false);\n//   const handleShow = () => setShow(true);\n\n//   const onSubmitForm = async (e) => {\n//     // Handle the form submitted\n\n//     // Prevent from refresh\n//     e.preventDefault();\n//     try {\n//       const body = { amount, concept, typeM, dateM };\n//       const response = await fetch(\n//         `http://localhost:5000/movements/${list.movement_id}`,\n//         {\n//           method: \"PUT\",\n//           headers: { \"Content-Type\": \"application/json\" },\n//           body: JSON.stringify(body),\n//         }\n//       );\n//       //  Once the response has been sent, itś going to refresh and show the changes\n//       window.location = \"/\";\n//     } catch (err) {\n//       console.error(err.message);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Edit\n//       </Button>\n\n//       <Modal show={show} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Edit movement</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <Form onSubmit={onSubmitForm}>\n//             <Form.Label>Amount</Form.Label>\n//             <InputGroup className=\"mb-3\">\n//               <InputGroup.Text>$</InputGroup.Text>\n//               <FormControl\n//                 value={amount}\n//                 onChange={(e) => setAmount(e.target.value)}\n//                 aria-label=\"Amount (to the nearest dollar)\"\n//               />\n//             </InputGroup>\n\n//             <Form.Label>Concept</Form.Label>\n//             <InputGroup className=\"mb-3\">\n//               <FormControl\n//                 value={concept}\n//                 aria-describedby=\"basic-addon1\"\n//                 onChange={(e) => setConcept(e.target.value)}\n//                 aria-describedby=\"basic-addon1\"\n//               />\n//             </InputGroup>\n\n//             <Form.Label>Type of Operation</Form.Label>\n//             <div\n//               key={`inline-radio`}\n//               className=\"mb-3\"\n//               value={typeM}\n//               onChange={(e) => setTypeM(e.target.value)}\n//             >\n//               <Form.Check\n//                 inline\n//                 disabled\n//                 label=\"Income\"\n//                 name=\"group1\"\n//                 type=\"radio\"\n//                 id={`inline-radio-1`}\n//                 value=\"I\"\n//                 checked={typeM === \"I\" ? true : false}\n//               />\n//               <Form.Check\n//                 inline\n//                 disabled\n//                 label=\"Outcome\"\n//                 name=\"group1\"\n//                 type=\"radio\"\n//                 id={`inline-radio-2`}\n//                 value=\"O\"\n//                 checked={typeM === \"O\" ? true : false}\n//               />\n//             </div>\n\n//             <Form.Label>Date</Form.Label>\n//             <FormControl\n//               className=\"mb-3\"\n//               type=\"date\"\n//               value={dateM}\n//               onChange={(e) => setDateM(e.target.value)}\n//             ></FormControl>\n\n//             <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n//               Submit\n//             </Button>\n//           </Form>\n//         </Modal.Body>\n//       </Modal>\n//     </>\n//   );\n// }\n\nfunction EditMovement({ list }) {\n  const onSubmitForm = async (e) => {\n    // Handle the form submitted\n\n    // Prevent from refresh\n    e.preventDefault();\n    try {\n      const body = { amount, concept, typeM, dateM };\n      const response = await fetch(\n        `http://localhost:5000/movements/${list.movement_id}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        }\n      );\n      //  Once the response has been sent, itś going to refresh and show the changes\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ModalInput\n        title=\"Edit movement\"\n        onSubmitForm={onSubmitForm}\n        disableMovementType={true}\n        list={list}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default EditMovement;\n"]},"metadata":{},"sourceType":"module"}