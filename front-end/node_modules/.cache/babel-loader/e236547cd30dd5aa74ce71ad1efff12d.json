{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditMovement() {\n  _s();\n\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit movement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              \"aria-label\": \"Amount (to the nearest dollar)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              \"aria-describedby\": \"basic-addon1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type of Operation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), ['radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Income\",\n              name: \"group1\",\n              type: type,\n              id: `inline-${type}-1`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Outcome\",\n              name: \"group1\",\n              type: type,\n              id: `inline-${type}-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)]\n          }, `inline-${type}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"mb-3\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mb-3\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n} // import \"../style.css\"\n// const EditMovement = props => {\n//     const [amount, setAmount] = React.useState(props.movement.amount)\n//     const [concept, setConcept] = React.useState(props.movement.concept)\n//     const [typeM, setTypeM] = React.useState(props.movement.typeM)\n//     const [dateM, setDateM] = React.useState(props.movement.dateM)\n//     const onSubmitForm = async e => {\n//         // Handle the form submitted\n//         // Prevent from refresh\n//         e.preventDefault()\n//         try {\n//           const body = { amount, concept, typeM, dateM }\n//           const response = await fetch(`http://localhost:5000/movements/${props.movement.movement_id}`, {\n//               method: \"PUT\",\n//               headers: { \"Content-Type\": \"application/json\" },\n//               body: JSON.stringify(body)\n//           })\n//         //  Once the response has been sent, it≈õ going to refresh and show the changes\n//           window.location = \"/\" \n//         } catch (err) {\n//             console.error(err.message)\n//         }\n//     }\n//     return (\n//         <div className=\"popup-box\">\n//             <div className=\"box\">\n//                 <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n//                 {/* {props.content} */}\n//                 <form onSubmit={onSubmitForm}>\n//                     <label>\n//                         Amount:\n//                         <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Concept:\n//                         <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Type of movement:\n//                         <select value={typeM} disabled >\n//                             <option value=\"I\">Income</option>\n//                             <option value=\"O\">Outcome</option>\n//                         </select>\n//                     </label>\n//                     <label>\n//                         Date:\n//                         <input type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n_s(EditMovement, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = EditMovement;\nexport default EditMovement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovement\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js"],"names":["React","Modal","Button","Form","EditMovement","show","setShow","useState","handleClose","handleShow","map","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Modal, Button, Form } from \"react-bootstrap\"\n\nfunction EditMovement() {\n    const [show, setShow] = React.useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Edit\n        </Button>\n  \n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit movement</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <Form>\n                <Form.Label>Amount</Form.Label>\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Text>$</InputGroup.Text>\n                    <FormControl aria-label=\"Amount (to the nearest dollar)\" />\n                </InputGroup>\n                <Form.Label>Concept</Form.Label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        aria-describedby=\"basic-addon1\"\n                    />\n                </InputGroup>\n                <Form.Label>Type of Operation</Form.Label>\n                {/* <Form.Select aria-label=\"Default select example\">\n                    <option>Select the type of operation...</option>\n                    <option value=\"I\">Income</option>\n                    <option value=\"O\">Outcome</option>\n                </Form.Select> */}\n                {['radio'].map((type) => (\n                    <div key={`inline-${type}`} className=\"mb-3\">\n                    <Form.Check\n                        inline\n                        label=\"Income\"\n                        name=\"group1\"\n                        type={type}\n                        id={`inline-${type}-1`}\n                    />\n                    <Form.Check\n                        inline\n                        label=\"Outcome\"\n                        name=\"group1\"\n                        type={type}\n                        id={`inline-${type}-2`}\n                    />\n                    </div>\n                ))}\n                <Form.Label>Date</Form.Label>\n                <FormControl className=\"mb-3\" type=\"date\"></FormControl>\n                <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n              </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n\n\n\n// import \"../style.css\"\n\n// const EditMovement = props => {\n//     const [amount, setAmount] = React.useState(props.movement.amount)\n//     const [concept, setConcept] = React.useState(props.movement.concept)\n//     const [typeM, setTypeM] = React.useState(props.movement.typeM)\n//     const [dateM, setDateM] = React.useState(props.movement.dateM)\n\n//     const onSubmitForm = async e => {\n//         // Handle the form submitted\n\n//         // Prevent from refresh\n//         e.preventDefault()\n//         try {\n//           const body = { amount, concept, typeM, dateM }\n//           const response = await fetch(`http://localhost:5000/movements/${props.movement.movement_id}`, {\n//               method: \"PUT\",\n//               headers: { \"Content-Type\": \"application/json\" },\n//               body: JSON.stringify(body)\n//           })\n//         //  Once the response has been sent, it≈õ going to refresh and show the changes\n//           window.location = \"/\" \n//         } catch (err) {\n//             console.error(err.message)\n//         }\n//     }\n\n//     return (\n//         <div className=\"popup-box\">\n//             <div className=\"box\">\n//                 <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n//                 {/* {props.content} */}\n//                 <form onSubmit={onSubmitForm}>\n//                     <label>\n//                         Amount:\n//                         <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Concept:\n//                         <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Type of movement:\n//                         <select value={typeM} disabled >\n//                             <option value=\"I\">Income</option>\n//                             <option value=\"O\">Outcome</option>\n//                         </select>\n//                     </label>\n//                     <label>\n//                         Date:\n//                         <input type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n\nexport default EditMovement"]},"metadata":{},"sourceType":"module"}