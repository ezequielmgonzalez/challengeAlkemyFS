{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/PreviewMovements.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreviewMovements = () => {\n  _s();\n\n  const [list, setList] = React.useState([]);\n\n  const getMovementsPreview = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/movements\");\n      const jsonData = await response.json();\n      setList(jsonData.slice(0, 10));\n      console.log(jsonData);\n    } catch (e) {\n      console.error(e.message);\n    }\n  }; // Makes a fetch request tou our REST api everytime this is component is rendered\n\n\n  React.useEffect(() => {\n    getMovements();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(list => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", list.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.concept\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.datem.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.typem === \"O\" ? \"Outcome\" : \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, list.movement_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreviewMovements, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = PreviewMovements;\nexport default PreviewMovements;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviewMovements\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/PreviewMovements.js"],"names":["React","Table","Button","PreviewMovements","list","setList","useState","getMovementsPreview","response","fetch","jsonData","json","slice","console","log","e","error","message","useEffect","getMovements","map","amount","concept","datem","substring","typem","movement_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMC,mBAAmB,GAAG,YAAY;AACtC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAN,MAAAA,OAAO,CAACK,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,KALD,CAKE,OAAOK,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAcD,CAAC,CAACE,OAAhB;AACD;AACF,GATD,CAH6B,CAc7B;;;AACAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,YAAY;AACb,GAFD,EAEG,EAFH;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACG,GADH,eAEE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGf,IAAI,CAACgB,GAAL,CAAUhB,IAAD,iBACR;AAAA,kCACE;AAAA,4BAAMA,IAAI,CAACiB,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKjB,IAAI,CAACkB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKlB,IAAI,CAACmB,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwB,EAAxB;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKpB,IAAI,CAACqB,KAAL,KAAe,GAAf,GAAqB,SAArB,GAAiC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASrB,IAAI,CAACsB,WAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5CD;;GAAMvB,gB;;KAAAA,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\nconst PreviewMovements = () => {\n  const [list, setList] = React.useState([]);\n\n  const getMovementsPreview = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/movements\");\n      const jsonData = await response.json();\n      setList(jsonData.slice(0, 10));\n      console.log(jsonData);\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n\n  // Makes a fetch request tou our REST api everytime this is component is rendered\n  React.useEffect(() => {\n    getMovements();\n  }, []);\n\n  return (\n    <React.Fragment>\n      {\" \"}\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Amount</th>\n            <th>Concept</th>\n            <th>Date</th>\n            <th>Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list.map((list) => (\n            <tr key={list.movement_id}>\n              <td>${list.amount}</td>\n              <td>{list.concept}</td>\n              <td>{list.datem.substring(0, 10)}</td>\n              <td>{list.typem === \"O\" ? \"Outcome\" : \"Income\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default PreviewMovements;\n"]},"metadata":{},"sourceType":"module"}