{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/InputMovement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputMovement = () => {\n  _s();\n\n  const [amount, setAmount] = React.useState(0);\n  const [concept, setConcept] = React.useState(\"\");\n  const [typeM, setTypeM] = React.useState(\"\");\n  const [dateM, setDateM] = React.useState(\"\");\n\n  const onSubmitForm = async e => {\n    // Handle the form submitted\n    // Prevent from refresh\n    e.preventDefault();\n\n    try {\n      const body = {\n        amount,\n        concept,\n        typeM,\n        dateM\n      };\n      const response = await fetch(\"http://localhost:5000/movements\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Input Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Concept:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: concept,\n          onChange: e => setConcept(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type of movement:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: typeM,\n          onChange: e => setTypeM(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"I\",\n            children: \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"O\",\n            children: \"Outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateM,\n          value: dateM,\n          onChange: e => setDateM(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputMovement, \"tbtd9gxFR77HUtrAHQv1IKl9Ye0=\");\n\n_c = InputMovement;\nexport default InputMovement;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMovement\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/InputMovement.js"],"names":["React","InputMovement","amount","setAmount","useState","concept","setConcept","typeM","setTypeM","dateM","setDateM","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","err","console","error","message","target","value"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nconst InputMovement = () => {\n    const [amount, setAmount] = React.useState(0)\n    const [concept, setConcept] = React.useState(\"\")\n    const [typeM, setTypeM] = React.useState(\"\")\n    const [dateM, setDateM] = React.useState(\"\")\n\n    const onSubmitForm = async e => {\n        // Handle the form submitted\n\n        // Prevent from refresh\n        e.preventDefault()\n        try {\n          const body = { amount, concept, typeM, dateM }\n          const response = await fetch(\"http://localhost:5000/movements\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n          }) \n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <h1>Input Movement</h1>\n            <form onSubmit={onSubmitForm}>\n                <label>\n                    Amount:\n                    <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n                </label>\n                <label>\n                    Concept:\n                    <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n                </label>\n                <label>\n                    Type of movement:\n                    <select value={typeM} onChange={e => setTypeM(e.target.value)} >\n                        <option value=\"I\">Income</option>\n                        <option value=\"O\">Outcome</option>\n                    </select>\n                </label>\n                <label>\n                    Date:\n                    <input type=\"date\" value={dateM} value={dateM} onChange={e => setDateM(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </React.Fragment>\n    )\n}\n\nexport default InputMovement"]},"metadata":{},"sourceType":"module"}