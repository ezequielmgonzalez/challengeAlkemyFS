{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/ModalInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Button, Form, InputGroup, FormControl, ModalTitle } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalInput(_ref) {\n  _s();\n\n  let {\n    title,\n    onSubmitForm,\n    disableMovementType,\n    list = {\n      amount: 0,\n      concept: \"\",\n      typem: \"I\",\n      datem: \"\"\n    }\n  } = _ref;\n  const [show, setShow] = React.useState(false);\n  const [amount, setAmount] = React.useState(list.amount);\n  const [concept, setConcept] = React.useState(list.concept);\n  const [typeM, setTypeM] = React.useState(list.typem);\n  const [dateM, setDateM] = React.useState(list.datem.substring(0, 10));\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); // const onSubmitFormBefore = async (e) => {\n  //   // Handle the form submitted\n  //   // Prevent from refresh\n  //   e.preventDefault();\n  //   try {\n  //     const body = { amount, concept, typeM, dateM };\n  //     const response = await fetch(\"http://localhost:5000/movements\", {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(body),\n  //     });\n  //     //  Once the response has been sent, itÅ› going to refresh and show the changes\n  //     window.location = \"/\";\n  //   } catch (err) {\n  //     console.error(err.message);\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => onSubmitForm(e, {\n            amount,\n            concept,\n            typeM,\n            dateM\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              value: amount,\n              onChange: e => setAmount(e.target.value),\n              \"aria-label\": \"Amount (to the nearest dollar)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              value: concept,\n              onChange: e => setConcept(e.target.value),\n              \"aria-describedby\": \"basic-addon1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: typeM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type of Operation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            value: typeM,\n            onChange: e => setTypeM(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              disabled: disableMovementType,\n              checked: typeM === \"I\",\n              label: \"Income\",\n              name: \"group1\",\n              type: \"radio\",\n              id: `inline-radio-1`,\n              value: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              disabled: disableMovementType,\n              checked: typeM === \"O\",\n              label: \"Outcome\",\n              name: \"group1\",\n              type: \"radio\",\n              id: `inline-radio-2`,\n              value: \"O\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, `inline-radio`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"mb-3\",\n            type: \"date\",\n            value: dateM,\n            onChange: e => setDateM(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mb-3\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalInput, \"pfq6k7wYm3IFvUGuRrhmKOpBl4I=\");\n\n_c = ModalInput;\nexport default ModalInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalInput\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/ModalInput.js"],"names":["React","Modal","Button","Form","InputGroup","FormControl","ModalTitle","ModalInput","title","onSubmitForm","disableMovementType","list","amount","concept","typem","datem","show","setShow","useState","setAmount","setConcept","typeM","setTypeM","dateM","setDateM","substring","handleClose","handleShow","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Form,\n  InputGroup,\n  FormControl,\n  ModalTitle,\n} from \"react-bootstrap\";\n\nfunction ModalInput({\n  title,\n  onSubmitForm,\n  disableMovementType,\n  list = { amount: 0, concept: \"\", typem: \"I\", datem: \"\" },\n}) {\n  const [show, setShow] = React.useState(false);\n\n  const [amount, setAmount] = React.useState(list.amount);\n  const [concept, setConcept] = React.useState(list.concept);\n  const [typeM, setTypeM] = React.useState(list.typem);\n  const [dateM, setDateM] = React.useState(list.datem.substring(0, 10));\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // const onSubmitFormBefore = async (e) => {\n  //   // Handle the form submitted\n\n  //   // Prevent from refresh\n  //   e.preventDefault();\n  //   try {\n  //     const body = { amount, concept, typeM, dateM };\n  //     const response = await fetch(\"http://localhost:5000/movements\", {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(body),\n  //     });\n  //     //  Once the response has been sent, itÅ› going to refresh and show the changes\n  //     window.location = \"/\";\n  //   } catch (err) {\n  //     console.error(err.message);\n  //   }\n  // };\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        +\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            onSubmit={(e) => onSubmitForm(e, { amount, concept, typeM, dateM })}\n          >\n            <Form.Label>Amount</Form.Label>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Text>$</InputGroup.Text>\n              <FormControl\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                aria-label=\"Amount (to the nearest dollar)\"\n              />\n            </InputGroup>\n\n            <Form.Label>Concept</Form.Label>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                value={concept}\n                onChange={(e) => setConcept(e.target.value)}\n                aria-describedby=\"basic-addon1\"\n              />\n            </InputGroup>\n            <p>{typeM}</p>\n            <Form.Label>Type of Operation</Form.Label>\n            <div\n              key={`inline-radio`}\n              className=\"mb-3\"\n              value={typeM}\n              onChange={(e) => setTypeM(e.target.value)}\n            >\n              <Form.Check\n                inline\n                disabled={disableMovementType}\n                checked={typeM === \"I\"}\n                label=\"Income\"\n                name=\"group1\"\n                type=\"radio\"\n                id={`inline-radio-1`}\n                value=\"I\"\n              />\n              <Form.Check\n                inline\n                disabled={disableMovementType}\n                checked={typeM === \"O\"}\n                label=\"Outcome\"\n                name=\"group1\"\n                type=\"radio\"\n                id={`inline-radio-2`}\n                value=\"O\"\n              />\n            </div>\n\n            <Form.Label>Date</Form.Label>\n            <FormControl\n              className=\"mb-3\"\n              type=\"date\"\n              value={dateM}\n              onChange={(e) => setDateM(e.target.value)}\n            ></FormControl>\n\n            <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalInput;\n"]},"metadata":{},"sourceType":"module"}