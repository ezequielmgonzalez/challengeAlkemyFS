{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/InputMovement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputMovement = () => {\n  _s();\n\n  const [amount, setAmount] = React.useState(0);\n  const [concept, setConcept] = React.useState(\"\");\n  const [typeM, setTypeM] = React.useState(\"I\");\n  const [dateM, setDateM] = React.useState(\"\");\n\n  const onSubmitForm = async e => {\n    // Handle the form submitted\n    // Prevent from refresh\n    e.preventDefault();\n\n    try {\n      const body = {\n        amount,\n        concept,\n        typeM,\n        dateM\n      };\n      const response = await fetch(\"http://localhost:5000/movements\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }); //  Once the response has been sent, itś going to refresh and show the changes\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Input Movement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          \"aria-label\": \"Amount (to the nearest dollar)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Concept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          value: concept,\n          onChange: e => setConcept(e.target.value),\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Type of Operation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        value: typeM,\n        onChange: e => setTypeM(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"Income\",\n          name: \"group1\",\n          type: \"radio\",\n          id: `inline-radio-1`,\n          value: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"Outcome\",\n          name: \"group1\",\n          type: \"radio\",\n          id: `inline-radio-2`,\n          value: \"O\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, `inline-radio`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"mb-3\",\n        type: \"date\",\n        value: dateM,\n        onChange: e => setDateM(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-3\",\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputMovement, \"uFj0UvphgpTTqCO2RkcORvUF74Q=\");\n\n_c = InputMovement;\nexport default InputMovement;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMovement\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/InputMovement.js"],"names":["React","Form","Button","InputGroup","FormControl","InputMovement","amount","setAmount","useState","concept","setConcept","typeM","setTypeM","dateM","setDateM","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","window","location","err","console","error","message","target","value"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\"\n\n\nconst InputMovement = () => {\n    const [amount, setAmount] = React.useState(0)\n    const [concept, setConcept] = React.useState(\"\")\n    const [typeM, setTypeM] = React.useState(\"I\")\n    const [dateM, setDateM] = React.useState(\"\")\n\n    const onSubmitForm = async e => {\n        // Handle the form submitted\n\n        // Prevent from refresh\n        e.preventDefault()\n        try {\n          const body = { amount, concept, typeM, dateM }\n          const response = await fetch(\"http://localhost:5000/movements\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n          })\n        //  Once the response has been sent, itś going to refresh and show the changes\n          window.location = \"/\" \n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {/* <h1>Input Movement</h1>\n            <form onSubmit={onSubmitForm}>\n                <label>\n                    Amount:\n                    <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n                </label>\n                <label>\n                    Concept:\n                    <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n                </label>\n                <label>\n                    Type of movement:\n                    <select value={typeM} onChange={e => setTypeM(e.target.value)} >\n                        <option value=\"I\">Income</option>\n                        <option value=\"O\">Outcome</option>\n                    </select>\n                </label>\n                <label>\n                    Date:\n                    <input type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form> */}\n\n            <Form onSubmit={onSubmitForm}>\n                <h1>Input Movement</h1>\n\n                <Form.Label>Amount</Form.Label>\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Text>$</InputGroup.Text>\n                    <FormControl \n                        value={amount} \n                        onChange={e => setAmount(e.target.value)} \n                        aria-label=\"Amount (to the nearest dollar)\" \n                    />\n                </InputGroup>\n\n                <Form.Label>Concept</Form.Label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl \n                        value={concept} \n                        onChange={e => setConcept(e.target.value)}\n                        aria-describedby=\"basic-addon1\"\n                    />\n                </InputGroup>\n\n                <Form.Label>Type of Operation</Form.Label>\n                {/* <Form.Select aria-label=\"Default select example\">\n                    <option>Select the type of operation...</option>\n                    <option value=\"I\">Income</option>\n                    <option value=\"O\">Outcome</option>\n                </Form.Select> */}\n                <div key={`inline-radio`} className=\"mb-3\" value={typeM} onChange={e => setTypeM(e.target.value)}>\n                    <Form.Check\n                        inline\n                        label=\"Income\"\n                        name=\"group1\"\n                        type=\"radio\"\n                        id={`inline-radio-1`}\n                        value=\"I\"\n                    />\n                    <Form.Check\n                        inline\n                        label=\"Outcome\"\n                        name=\"group1\"\n                        type=\"radio\"\n                        id={`inline-radio-2`}\n                        value=\"O\"\n                    />\n                </div>\n\n                <Form.Label>Date</Form.Label>\n                <FormControl className=\"mb-3\" type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)}></FormControl>\n\n                <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n\n        </React.Fragment>\n    )\n}\n\nexport default InputMovement"]},"metadata":{},"sourceType":"module"}