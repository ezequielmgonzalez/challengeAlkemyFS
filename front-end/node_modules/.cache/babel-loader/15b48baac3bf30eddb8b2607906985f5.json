{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditMovement() {\n  _s();\n\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Launch demo modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you're reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditMovement, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = EditMovement;\nrender( /*#__PURE__*/_jsxDEV(EditMovement, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 10\n}, this)); // import \"../style.css\"\n// const EditMovement = props => {\n//     const [amount, setAmount] = React.useState(props.movement.amount)\n//     const [concept, setConcept] = React.useState(props.movement.concept)\n//     const [typeM, setTypeM] = React.useState(props.movement.typeM)\n//     const [dateM, setDateM] = React.useState(props.movement.dateM)\n//     const onSubmitForm = async e => {\n//         // Handle the form submitted\n//         // Prevent from refresh\n//         e.preventDefault()\n//         try {\n//           const body = { amount, concept, typeM, dateM }\n//           const response = await fetch(`http://localhost:5000/movements/${props.movement.movement_id}`, {\n//               method: \"PUT\",\n//               headers: { \"Content-Type\": \"application/json\" },\n//               body: JSON.stringify(body)\n//           })\n//         //  Once the response has been sent, itś going to refresh and show the changes\n//           window.location = \"/\" \n//         } catch (err) {\n//             console.error(err.message)\n//         }\n//     }\n//     return (\n//         <div className=\"popup-box\">\n//             <div className=\"box\">\n//                 <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n//                 {/* {props.content} */}\n//                 <form onSubmit={onSubmitForm}>\n//                     <label>\n//                         Amount:\n//                         <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Concept:\n//                         <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Type of movement:\n//                         <select value={typeM} disabled >\n//                             <option value=\"I\">Income</option>\n//                             <option value=\"O\">Outcome</option>\n//                         </select>\n//                     </label>\n//                     <label>\n//                         Date:\n//                         <input type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\nexport default EditMovement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovement\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/EditMovement.js"],"names":["React","Modal","Button","EditMovement","show","setShow","useState","handleClose","handleShow","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMG,UAAU,GAAG,MAAMH,OAAO,CAAC,IAAD,CAAhC;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEG,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEJ,IAAb;AAAmB,MAAA,MAAM,EAAEG,WAA3B;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEA,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAsBD;;GA5BMJ,Y;;KAAAA,Y;AA8BPM,MAAM,eAAC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,QAAD,CAAN,C,CAIF;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,eAAeN,YAAf","sourcesContent":["import React from \"react\"\nimport { Modal, Button } from \"react-bootstrap\"\n\nfunction EditMovement() {\n    const [show, setShow] = React.useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Launch demo modal\n        </Button>\n  \n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n  \n  render(<EditMovement />);\n\n\n\n// import \"../style.css\"\n\n// const EditMovement = props => {\n//     const [amount, setAmount] = React.useState(props.movement.amount)\n//     const [concept, setConcept] = React.useState(props.movement.concept)\n//     const [typeM, setTypeM] = React.useState(props.movement.typeM)\n//     const [dateM, setDateM] = React.useState(props.movement.dateM)\n\n//     const onSubmitForm = async e => {\n//         // Handle the form submitted\n\n//         // Prevent from refresh\n//         e.preventDefault()\n//         try {\n//           const body = { amount, concept, typeM, dateM }\n//           const response = await fetch(`http://localhost:5000/movements/${props.movement.movement_id}`, {\n//               method: \"PUT\",\n//               headers: { \"Content-Type\": \"application/json\" },\n//               body: JSON.stringify(body)\n//           })\n//         //  Once the response has been sent, itś going to refresh and show the changes\n//           window.location = \"/\" \n//         } catch (err) {\n//             console.error(err.message)\n//         }\n//     }\n\n//     return (\n//         <div className=\"popup-box\">\n//             <div className=\"box\">\n//                 <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n//                 {/* {props.content} */}\n//                 <form onSubmit={onSubmitForm}>\n//                     <label>\n//                         Amount:\n//                         <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Concept:\n//                         <input type=\"text\" value={concept} onChange={e => setConcept(e.target.value)} />\n//                     </label>\n//                     <label>\n//                         Type of movement:\n//                         <select value={typeM} disabled >\n//                             <option value=\"I\">Income</option>\n//                             <option value=\"O\">Outcome</option>\n//                         </select>\n//                     </label>\n//                     <label>\n//                         Date:\n//                         <input type=\"date\" value={dateM} onChange={e => setDateM(e.target.value)} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n\nexport default EditMovement"]},"metadata":{},"sourceType":"module"}