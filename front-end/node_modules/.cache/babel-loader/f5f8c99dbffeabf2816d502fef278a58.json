{"ast":null,"code":"var _jsxFileName = \"/home/ezequiel/challengeFullStack/my-app/src/components/ListMovements.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport EditMovement from \"./EditMovement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListMovements = () => {\n  _s();\n\n  const [list, setList] = React.useState([]);\n  const [popUp, setPopUp] = React.useState(false);\n\n  const togglePopUp = () => {\n    setPopUp(!popUp);\n  };\n\n  const getMovements = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/movements\");\n      const jsonData = await response.json();\n      setList(jsonData.slice(0, 10));\n      console.log(jsonData);\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n\n  const deleteMovement = async id => {\n    try {\n      const deleteMovement = await fetch(`http://localhost:5000/movements/${id}`, {\n        method: \"DELETE\"\n      });\n      setList(list.filter(list => list.movement_id !== id));\n    } catch (e) {\n      console.error(e.message);\n    }\n  }; // Makes a fetch request tou our REST api everytime this is component is rendered\n\n\n  React.useEffect(() => {\n    getMovements();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(list => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.concept\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.dateM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.typeM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Click to Open Popup\",\n                onClick: togglePopUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this), popUp && /*#__PURE__*/_jsxDEV(EditMovement, {\n                content: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Design your Popup\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Test button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true),\n                handleClose: togglePopUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteMovement(list.movement_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, list.movement_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListMovements, \"bBw6d9jtf2+8+hrDBt032dveclw=\");\n\n_c = ListMovements;\nexport default ListMovements;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListMovements\");","map":{"version":3,"sources":["/home/ezequiel/challengeFullStack/my-app/src/components/ListMovements.js"],"names":["React","EditMovement","ListMovements","list","setList","useState","popUp","setPopUp","togglePopUp","getMovements","response","fetch","jsonData","json","slice","console","log","e","error","message","deleteMovement","id","method","filter","movement_id","useEffect","map","amount","concept","dateM","typeM"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nimport EditMovement from \"./EditMovement\"\n\nconst ListMovements = () => {\n    const [list, setList] = React.useState([])\n    const [popUp, setPopUp] = React.useState(false)\n\n    const togglePopUp = () => {\n        setPopUp(!popUp)\n    }\n\n    const getMovements = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/movements\")\n            const jsonData = await response.json()\n            setList(jsonData.slice(0,10))\n            console.log(jsonData)\n        } catch (e) {\n            console.error(e.message)\n        }\n    }\n\n    const deleteMovement = async (id) => {\n        try {\n            const deleteMovement = await fetch(`http://localhost:5000/movements/${id}`, {\n                method: \"DELETE\"\n            })\n            setList(list.filter(list => list.movement_id !== id))\n        } catch (e) {\n            console.error(e.message)\n        }\n    }\n\n    // Makes a fetch request tou our REST api everytime this is component is rendered\n    React.useEffect(() => {\n        getMovements()\n    }, [])\n\n    return (\n        <React.Fragment>\n            {\" \"}\n            <table>\n                <thead>\n                <tr>\n                    <th>Amount</th>\n                    <th>Concept</th>\n                    <th>Date</th>\n                    <th>Type</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                {/*<tr>\n                    <td>John</td>\n                    <td>Doe</td>\n                    <td>john@example.com</td>\n                </tr> */}\n                {list.map(list => (\n                    <tr key={list.movement_id}>\n                    <td>{list.amount}</td>\n                    <td>{list.concept}</td>\n                    <td>{list.dateM}</td>\n                    <td>{list.typeM}</td>\n                    <td>\n                        {/* <EditMovement /> */}\n                        <div>\n                            <input\n                            type=\"button\"\n                            value=\"Click to Open Popup\"\n                            onClick={togglePopUp}\n                            />\n                            <p>Edit</p>\n                            {popUp && <EditMovement\n                            content={<>\n                                <b>Design your Popup</b>\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                                <button>Test button</button>\n                            </>}\n                            handleClose={togglePopUp}\n                            />}\n                        </div>\n                    </td>\n                    <td>\n                        <button\n                         onClick={() => deleteMovement(list.movement_id)}\n                        >\n                        Delete\n                        </button>\n                    </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </React.Fragment>\n    )\n}\n\nexport default ListMovements"]},"metadata":{},"sourceType":"module"}